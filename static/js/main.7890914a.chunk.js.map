{"version":3,"sources":["Components/CardList/styledComponents.jsx","Components/CardList/CardList.jsx","App.js","serviceWorker.js","index.js","assets/img/druid/goru.png","assets/img/druid/ysera.png","assets/img/hunter/dragonbane.png","assets/img/hunter/veranus.png","assets/img/mage/chenvaala.png","assets/img/mage/malygos.png","assets/img/paladin/nozdormu.png","assets/img/paladin/talritha.png","assets/img/priest/dornozmu.png","assets/img/priest/kaahrj.png","assets/img/rogue/flik.png","assets/img/rogue/waxadred.png","assets/img/shaman/bandersmosh.png","assets/img/shaman/nithogg.png","assets/img/warlock/valdris.png","assets/img/warlock/zzeraku.png","assets/img/warrior/ancharrr.png","assets/img/warrior/deathwing.png","assets/img/neutral/alexstrasza.png","assets/img/neutral/kindleroost.png","assets/img/neutral/kronx.png","assets/img/neutral/shuma.png"],"names":["ProgressValue","styled","p","props","amount","CardList","useStateWithCallback","setProgressInPercents","progressInAmount","totalLegendariesAmount","progressInPercents","useState","setProgressInAmount","getClassBlock","className","Array","from","arguments","map","argument","onClick","event","target","style","opacity","src","percent","showInfo","goru","ysera","dragonbane","veranus","chenvaala","malygos","nozdormu","talritha","dornozmu","kaahrj","flik","waxadred","bandersmosh","nithogg","valdris","zzeraku","ancharrr","deathwing","alexstrasza","kindleroost","kronx","shuma","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"mYAEO,IAAMA,E,MAAgBC,EAAOC,EAAV,KAIT,SAAAC,GAAK,OAAsB,IAAjBA,EAAMC,OAAe,MAAQ,SAC7C,SAAAD,GAAK,OAAKA,EAAMC,OAAS,GAAK,QAAU,W,4XCqBtCC,GAAW,WAAO,IAAD,EACwBC,IAAqB,GAAG,WAC1EC,EAAuBC,EAAmBC,EAA0B,QAF1C,mBACrBC,EADqB,KACDH,EADC,OAIoBI,mBAAS,GAJ7B,mBAIrBH,EAJqB,KAIHI,EAJG,KAKtBH,EAAyB,GAE/B,SAASI,EAAcC,GAAY,IAAD,YAChC,OACE,yBAAKA,UAAU,eACb,2BAAIA,GACJ,yBAAKA,UAAU,cACZC,MAAMC,KAAKC,WAAWC,KACrB,SAAAC,GAAQ,OACNA,IAAaF,EAAU,IACrB,yBACEG,QAAS,SAAAC,GAC2B,KAA9BA,EAAMC,OAAOC,MAAMC,SACrBH,EAAMC,OAAOC,MAAMC,QAAU,MAC7BZ,EAAoBJ,EAAmB,KAEvCa,EAAMC,OAAOC,MAAMC,QAAU,IAC7BZ,EAAoBJ,EAAmB,KAG3CiB,IAAKN,SASrB,OACE,6BACE,yBAAKL,UAAU,wBACb,kBAAC,IAAD,CACEA,UAAU,eACVY,QAAShB,EACTiB,UAAU,IAEZ,kBAAC3B,EAAD,CAAeI,OAAQI,GACpBA,EADH,IACsBC,IAIxB,yBAAKK,UAAU,aACb,yBAAKA,UAAU,YACZD,EAAc,QAASe,IAAMC,KAC7BhB,EAAc,SAAUiB,IAAYC,KACpClB,EAAc,OAAQmB,IAAWC,MAEpC,yBAAKnB,UAAU,YACZD,EAAc,UAAWqB,IAAUC,KACnCtB,EAAc,SAAUuB,IAAUC,KAClCxB,EAAc,QAASyB,IAAMC,MAEhC,yBAAKzB,UAAU,YACZD,EAAc,SAAU2B,IAAaC,KACrC5B,EAAc,UAAW6B,IAASC,KAClC9B,EAAc,UAAW+B,IAAUC,MAEtC,yBAAK/B,UAAU,YACZD,EAAc,UAAWiC,IAAaC,IAAaC,KAAOC,UCjFtDC,OARf,WACE,OACE,6BACE,kBAAC,GAAD,QCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.7890914a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ProgressValue = styled.p`\r\n  position: absolute;\r\n  top: 2.25vw;\r\n  font-size: 20px;\r\n  font-weight: ${props => (props.amount === 0 ? \"400\" : \"500\")};\r\n  color: ${props => (props.amount > 11 ? \"white\" : \"black\")};\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport useStateWithCallback from \"use-state-with-callback\";\r\nimport {} from \"./styles.css\";\r\nimport { Progress } from \"antd\";\r\nimport { ProgressValue } from \"./styledComponents.jsx\";\r\nimport goru from \"../../assets/img/druid/goru.png\";\r\nimport ysera from \"../../assets/img/druid/ysera.png\";\r\nimport dragonbane from \"../../assets/img/hunter/dragonbane.png\";\r\nimport veranus from \"../../assets/img/hunter/veranus.png\";\r\nimport chenvaala from \"../../assets/img/mage/chenvaala.png\";\r\nimport malygos from \"../../assets/img/mage/malygos.png\";\r\nimport nozdormu from \"../../assets/img/paladin/nozdormu.png\";\r\nimport talritha from \"../../assets/img/paladin/talritha.png\";\r\nimport dornozmu from \"../../assets/img/priest/dornozmu.png\";\r\nimport kaahrj from \"../../assets/img/priest/kaahrj.png\";\r\nimport flik from \"../../assets/img/rogue/flik.png\";\r\nimport waxadred from \"../../assets/img/rogue/waxadred.png\";\r\nimport bandersmosh from \"../../assets/img/shaman/bandersmosh.png\";\r\nimport nithogg from \"../../assets/img/shaman/nithogg.png\";\r\nimport valdris from \"../../assets/img/warlock/valdris.png\";\r\nimport zzeraku from \"../../assets/img/warlock/zzeraku.png\";\r\nimport ancharrr from \"../../assets/img/warrior/ancharrr.png\";\r\nimport deathwing from \"../../assets/img/warrior/deathwing.png\";\r\nimport alexstrasza from \"../../assets/img/neutral/alexstrasza.png\";\r\nimport kindleroost from \"../../assets/img/neutral/kindleroost.png\";\r\nimport kronx from \"../../assets/img/neutral/kronx.png\";\r\nimport shuma from \"../../assets/img/neutral/shuma.png\";\r\n\r\nexport const CardList = () => {\r\n  const [progressInPercents, setProgressInPercents] = useStateWithCallback(0, () => {\r\n    setProgressInPercents((progressInAmount / totalLegendariesAmount) * 100);\r\n  });\r\n  const [progressInAmount, setProgressInAmount] = useState(0);\r\n  const totalLegendariesAmount = 22;\r\n\r\n  function getClassBlock(className) {\r\n    return (\r\n      <div className=\"class-block\">\r\n        <p>{className}</p>\r\n        <div className=\"card-block\">\r\n          {Array.from(arguments).map(\r\n            argument =>\r\n              argument !== arguments[0] && (\r\n                <img\r\n                  onClick={event => {\r\n                    if (event.target.style.opacity == \"1\") {\r\n                      event.target.style.opacity = \"0.5\";\r\n                      setProgressInAmount(progressInAmount - 1);\r\n                    } else {\r\n                      event.target.style.opacity = \"1\";\r\n                      setProgressInAmount(progressInAmount + 1);\r\n                    }\r\n                  }}\r\n                  src={argument}\r\n                />\r\n              )\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"progress-bar-wrapper\">\r\n        <Progress\r\n          className=\"progress-bar\"\r\n          percent={progressInPercents}\r\n          showInfo={false}\r\n        />\r\n        <ProgressValue amount={progressInAmount}>\r\n          {progressInAmount}/{totalLegendariesAmount}\r\n        </ProgressValue>\r\n      </div>\r\n\r\n      <div className=\"card-list\">\r\n        <div className=\"list-row\">\r\n          {getClassBlock(\"Druid\", goru, ysera)}\r\n          {getClassBlock(\"Hunter\", dragonbane, veranus)}\r\n          {getClassBlock(\"Mage\", chenvaala, malygos)}\r\n        </div>\r\n        <div className=\"list-row\">\r\n          {getClassBlock(\"Paladin\", nozdormu, talritha)}\r\n          {getClassBlock(\"Priest\", dornozmu, kaahrj)}\r\n          {getClassBlock(\"Rogue\", flik, waxadred)}\r\n        </div>\r\n        <div className=\"list-row\">\r\n          {getClassBlock(\"Shaman\", bandersmosh, nithogg)}\r\n          {getClassBlock(\"Warlock\", valdris, zzeraku)}\r\n          {getClassBlock(\"Warrior\", ancharrr, deathwing)}\r\n        </div>\r\n        <div className=\"list-row\">\r\n          {getClassBlock(\"Neutral\", alexstrasza, kindleroost, kronx, shuma)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { CardList } from \"./Components/CardList/CardList\";\n\nfunction App() {\n  return (\n    <div>\n      <CardList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/goru.dcc1560f.png\";","module.exports = __webpack_public_path__ + \"static/media/ysera.7eaf797a.png\";","module.exports = __webpack_public_path__ + \"static/media/dragonbane.d6f7e44a.png\";","module.exports = __webpack_public_path__ + \"static/media/veranus.bd07d827.png\";","module.exports = __webpack_public_path__ + \"static/media/chenvaala.ca63e205.png\";","module.exports = __webpack_public_path__ + \"static/media/malygos.6be01f97.png\";","module.exports = __webpack_public_path__ + \"static/media/nozdormu.d3b4a980.png\";","module.exports = __webpack_public_path__ + \"static/media/talritha.0e2393a3.png\";","module.exports = __webpack_public_path__ + \"static/media/dornozmu.c102e7ec.png\";","module.exports = __webpack_public_path__ + \"static/media/kaahrj.34df14de.png\";","module.exports = __webpack_public_path__ + \"static/media/flik.2b811f48.png\";","module.exports = __webpack_public_path__ + \"static/media/waxadred.f7b03dd2.png\";","module.exports = __webpack_public_path__ + \"static/media/bandersmosh.a787723e.png\";","module.exports = __webpack_public_path__ + \"static/media/nithogg.5697d10d.png\";","module.exports = __webpack_public_path__ + \"static/media/valdris.3d9b2dbb.png\";","module.exports = __webpack_public_path__ + \"static/media/zzeraku.08935366.png\";","module.exports = __webpack_public_path__ + \"static/media/ancharrr.8b72545e.png\";","module.exports = __webpack_public_path__ + \"static/media/deathwing.5ca35694.png\";","module.exports = __webpack_public_path__ + \"static/media/alexstrasza.fe5a2f15.png\";","module.exports = __webpack_public_path__ + \"static/media/kindleroost.1ca664bf.png\";","module.exports = __webpack_public_path__ + \"static/media/kronx.d9ce08cd.png\";","module.exports = __webpack_public_path__ + \"static/media/shuma.126396b5.png\";"],"sourceRoot":""}